{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samee\\\\Projects\\\\ai_language_real - Copy\\\\frontend\\\\src\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [language, setLanguage] = useState('spanish');\n  const [level, setLevel] = useState('novice');\n  const [isLoading, setIsLoading] = useState(false);\n  const [activeExercise, setActiveExercise] = useState(null);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [currentFeedback, setCurrentFeedback] = useState(null);\n  const [progress, setProgress] = useState({\n    totalSessions: 0,\n    averageScore: 0,\n    vocabularyMastered: 0,\n    grammarPoints: 0\n  });\n  const [enableFeedback, setEnableFeedback] = useState(true); // New state for toggle\n\n  const updateProgress = async feedback => {\n    try {\n      await fetch('http://localhost:8000/record-progress', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: 'demo-user',\n          date: new Date().toISOString(),\n          score: feedback.score,\n          language: language,\n          level: level,\n          exercise_type: activeExercise === null || activeExercise === void 0 ? void 0 : activeExercise.type\n        })\n      });\n      setProgress(prev => ({\n        ...prev,\n        totalSessions: prev.totalSessions + 1,\n        averageScore: Math.round((prev.averageScore * prev.totalSessions + feedback.score) / (prev.totalSessions + 1)),\n        vocabularyMastered: prev.vocabularyMastered + (feedback.suggestions.some(s => s.toLowerCase().includes('vocabulary')) ? 1 : 0),\n        grammarPoints: prev.grammarPoints + (feedback.errors.length > 0 ? 1 : 0)\n      }));\n    } catch (error) {\n      console.error('Error recording progress:', error);\n    }\n  };\n  useEffect(() => {\n    if (currentFeedback) {\n      updateProgress(currentFeedback);\n    }\n  }, [currentFeedback]);\n  const handleSend = async () => {\n    if (!inputText.trim()) return;\n    if (!activeExercise && (inputText.toLowerCase().includes('vocab') || inputText.toLowerCase().includes('exercise') || inputText.toLowerCase().includes('practice'))) {\n      handleGetExercise();\n      return;\n    }\n    const userMessage = {\n      text: inputText,\n      sender: 'user',\n      isExercise: !!activeExercise\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: inputText,\n          language,\n          level,\n          is_exercise: !!activeExercise,\n          enable_feedback: enableFeedback // Send preference to backend\n        })\n      });\n      const data = await response.json();\n      const tutorMessage = {\n        text: data.response,\n        sender: 'tutor',\n        feedback: enableFeedback ? data.feedback : null // Only include feedback if enabled\n      };\n      setMessages(prev => [...prev, tutorMessage]);\n      if (enableFeedback && data.feedback) {\n        setCurrentFeedback({\n          ...data.feedback,\n          userInput: inputText\n        });\n        setShowFeedback(true);\n        updateProgress(data.feedback);\n      }\n      if (activeExercise) {\n        setActiveExercise(null);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        text: \"Sorry, I encountered an error. Please try again.\",\n        sender: 'tutor'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleGetExercise = async () => {\n    setIsLoading(true);\n    setMessages(prev => [...prev, {\n      text: \"Great! Let's practice some vocabulary...\",\n      sender: 'tutor'\n    }]);\n    try {\n      const response = await fetch('http://localhost:8000/vocab-exercise', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          language,\n          level\n        })\n      });\n      const data = await response.json();\n      setActiveExercise(data);\n      const exerciseMessage = {\n        text: data.content || data.raw,\n        sender: 'exercise',\n        exerciseType: data.type,\n        instructions: data.instructions,\n        targetAnswers: data.target\n      };\n      setMessages(prev => [...prev, exerciseMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        text: \"Sorry, I couldn't generate an exercise right now.\",\n        sender: 'tutor'\n      }]);\n    } finally {\n      setIsLoading(false);\n      setInputText('');\n    }\n  };\n  const renderLanguageText = text => {\n    return text.split('\\n').map((paragraph, pIndex) => {\n      // Simple detection for Spanish/Urdu vs English\n      const isTargetLanguage = /[à-úÀ-ÚñÑ]/.test(paragraph) || language === 'urdu' && /[a-zA-Z]/.test(paragraph);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: isTargetLanguage ? 'target-language' : 'english-text',\n        lang: isTargetLanguage ? language : 'en',\n        children: paragraph\n      }, pIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const ProgressDisplay = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Learning Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-metrics\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-value\",\n          children: progress.totalSessions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-label\",\n          children: \"Sessions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-value\",\n          children: [progress.averageScore, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-label\",\n          children: \"Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-value\",\n          children: progress.vocabularyMastered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-label\",\n          children: \"Words Learned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n  const renderFeedbackModal = () => {\n    var _currentFeedback$erro, _currentFeedback$sugg;\n    if (!showFeedback || !currentFeedback) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Detailed Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-score\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Performance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `score-${Math.floor(currentFeedback.score / 20)}`,\n            children: [currentFeedback.score, \"/100\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Your Input:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-input\",\n            children: currentFeedback.userInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), currentFeedback.corrected && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Corrected Version:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"corrected-text\",\n            children: currentFeedback.corrected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), ((_currentFeedback$erro = currentFeedback.errors) === null || _currentFeedback$erro === void 0 ? void 0 : _currentFeedback$erro.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Errors Found:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"error-list\",\n            children: currentFeedback.errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: error\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), currentFeedback.explanation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Explanation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"explanation-text\",\n            children: currentFeedback.explanation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), ((_currentFeedback$sugg = currentFeedback.suggestions) === null || _currentFeedback$sugg === void 0 ? void 0 : _currentFeedback$sugg.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Suggestions for Improvement:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"suggestions-list\",\n            children: currentFeedback.suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: suggestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFeedback(false),\n          className: \"close-feedback\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"toggle-feedback\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: enableFeedback,\n          onChange: () => setEnableFeedback(!enableFeedback)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Enable Feedback & Grading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), renderFeedbackModal(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: language,\n        onChange: e => setLanguage(e.target.value),\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"spanish\",\n          children: \"Spanish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"urdu\",\n          children: \"Urdu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: level,\n        onChange: e => setLevel(e.target.value),\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"novice\",\n          children: \"Novice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"beginner\",\n          children: \"Beginner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"intermediate\",\n          children: \"Intermediate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"advanced\",\n          children: \"Advanced\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGetExercise,\n        disabled: isLoading || activeExercise,\n        className: \"exercise-btn\",\n        children: \"Get Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: [msg.sender === 'exercise' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exercise-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"exercise-badge\",\n            children: msg.exerciseType.toLowerCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"exercise-difficulty\",\n            children: level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this), msg.instructions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exercise-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Instructions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this), \" \", msg.instructions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: renderLanguageText(msg.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), msg.feedback && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            var _messages$find;\n            setCurrentFeedback({\n              ...msg.feedback,\n              userInput: ((_messages$find = messages.find(m => m.sender === 'user' && m.isExercise === !!msg.feedback)) === null || _messages$find === void 0 ? void 0 : _messages$find.text) || ''\n            });\n            setShowFeedback(true);\n          },\n          className: \"view-feedback-btn\",\n          children: \"View Detailed Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message tutor\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: activeExercise ? \"Type your answer here...\" : \"Type your message or ask for 'vocab exercise'...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        disabled: isLoading || !inputText.trim(),\n        children: activeExercise ? \"Submit Answer\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"XHAq6PSjfe8o5Z0X+JY5/Q6QUuA=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","inputText","setInputText","language","setLanguage","level","setLevel","isLoading","setIsLoading","activeExercise","setActiveExercise","showFeedback","setShowFeedback","currentFeedback","setCurrentFeedback","progress","setProgress","totalSessions","averageScore","vocabularyMastered","grammarPoints","enableFeedback","setEnableFeedback","updateProgress","feedback","fetch","method","headers","body","JSON","stringify","user_id","date","Date","toISOString","score","exercise_type","type","prev","Math","round","suggestions","some","s","toLowerCase","includes","errors","length","error","console","handleSend","trim","handleGetExercise","userMessage","text","sender","isExercise","response","is_exercise","enable_feedback","data","json","tutorMessage","userInput","exerciseMessage","content","raw","exerciseType","instructions","targetAnswers","target","renderLanguageText","split","map","paragraph","pIndex","isTargetLanguage","test","className","lang","children","fileName","_jsxFileName","lineNumber","columnNumber","ProgressDisplay","renderFeedbackModal","_currentFeedback$erro","_currentFeedback$sugg","floor","corrected","index","explanation","suggestion","onClick","handleKeyPress","e","key","checked","onChange","value","disabled","msg","i","_messages$find","find","m","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/samee/Projects/ai_language_real - Copy/frontend/src/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ChatInterface() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [language, setLanguage] = useState('spanish');\r\n  const [level, setLevel] = useState('novice');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [activeExercise, setActiveExercise] = useState(null);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [currentFeedback, setCurrentFeedback] = useState(null);\r\n  const [progress, setProgress] = useState({\r\n    totalSessions: 0,\r\n    averageScore: 0,\r\n    vocabularyMastered: 0,\r\n    grammarPoints: 0\r\n  });\r\n  const [enableFeedback, setEnableFeedback] = useState(true); // New state for toggle\r\n\r\n  const updateProgress = async (feedback) => {\r\n    try {\r\n      await fetch('http://localhost:8000/record-progress', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          user_id: 'demo-user',\r\n          date: new Date().toISOString(),\r\n          score: feedback.score,\r\n          language: language,\r\n          level: level,\r\n          exercise_type: activeExercise?.type\r\n        })\r\n      });\r\n\r\n      setProgress(prev => ({\r\n        ...prev,\r\n        totalSessions: prev.totalSessions + 1,\r\n        averageScore: Math.round(\r\n          (prev.averageScore * prev.totalSessions + feedback.score) / \r\n          (prev.totalSessions + 1)\r\n        ),\r\n        vocabularyMastered: prev.vocabularyMastered + \r\n          (feedback.suggestions.some(s => s.toLowerCase().includes('vocabulary')) ? 1 : 0),\r\n        grammarPoints: prev.grammarPoints + \r\n          (feedback.errors.length > 0 ? 1 : 0)\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error recording progress:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentFeedback) {\r\n      updateProgress(currentFeedback);\r\n    }\r\n  }, [currentFeedback]);\r\n\r\n  const handleSend = async () => {\r\n    if (!inputText.trim()) return;\r\n\r\n    if (!activeExercise && (inputText.toLowerCase().includes('vocab') || \r\n                         inputText.toLowerCase().includes('exercise') ||\r\n                         inputText.toLowerCase().includes('practice'))) {\r\n      handleGetExercise();\r\n      return;\r\n    }\r\n\r\n    const userMessage = { \r\n      text: inputText, \r\n      sender: 'user',\r\n      isExercise: !!activeExercise\r\n    };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputText('');\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:8000/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ \r\n          text: inputText, \r\n          language, \r\n          level,\r\n          is_exercise: !!activeExercise,\r\n          enable_feedback: enableFeedback // Send preference to backend\r\n        })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      const tutorMessage = { \r\n        text: data.response, \r\n        sender: 'tutor',\r\n        feedback: enableFeedback ? data.feedback : null // Only include feedback if enabled\r\n      };\r\n      \r\n      setMessages(prev => [...prev, tutorMessage]);\r\n      \r\n      if (enableFeedback && data.feedback) {\r\n        setCurrentFeedback({\r\n          ...data.feedback,\r\n          userInput: inputText\r\n        });\r\n        setShowFeedback(true);\r\n        updateProgress(data.feedback);\r\n      }\r\n      \r\n      if (activeExercise) {\r\n        setActiveExercise(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setMessages(prev => [...prev, { \r\n        text: \"Sorry, I encountered an error. Please try again.\", \r\n        sender: 'tutor' \r\n      }]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGetExercise = async () => {\r\n    setIsLoading(true);\r\n    setMessages(prev => [...prev, { \r\n      text: \"Great! Let's practice some vocabulary...\", \r\n      sender: 'tutor' \r\n    }]);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:8000/vocab-exercise', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ language, level })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      setActiveExercise(data);\r\n      \r\n      const exerciseMessage = { \r\n        text: data.content || data.raw, \r\n        sender: 'exercise',\r\n        exerciseType: data.type,\r\n        instructions: data.instructions,\r\n        targetAnswers: data.target\r\n      };\r\n      \r\n      setMessages(prev => [...prev, exerciseMessage]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setMessages(prev => [...prev, { \r\n        text: \"Sorry, I couldn't generate an exercise right now.\", \r\n        sender: 'tutor' \r\n      }]);\r\n    } finally {\r\n      setIsLoading(false);\r\n      setInputText('');\r\n    }\r\n  };\r\n\r\n  const renderLanguageText = (text) => {\r\n    return text.split('\\n').map((paragraph, pIndex) => {\r\n      // Simple detection for Spanish/Urdu vs English\r\n      const isTargetLanguage = /[à-úÀ-ÚñÑ]/.test(paragraph) || \r\n                             (language === 'urdu' && /[a-zA-Z]/.test(paragraph));\r\n      \r\n      return (\r\n        <p \r\n          key={pIndex} \r\n          className={isTargetLanguage ? 'target-language' : 'english-text'}\r\n          lang={isTargetLanguage ? language : 'en'}\r\n        >\r\n          {paragraph}\r\n        </p>\r\n      );\r\n    });\r\n  };\r\n\r\n  const ProgressDisplay = () => (\r\n    <div className=\"progress-display\">\r\n      <h3>Your Learning Progress</h3>\r\n      <div className=\"progress-metrics\">\r\n        <div className=\"progress-item\">\r\n          <span className=\"progress-value\">{progress.totalSessions}</span>\r\n          <span className=\"progress-label\">Sessions</span>\r\n        </div>\r\n        <div className=\"progress-item\">\r\n          <span className=\"progress-value\">{progress.averageScore}%</span>\r\n          <span className=\"progress-label\">Accuracy</span>\r\n        </div>\r\n        <div className=\"progress-item\">\r\n          <span className=\"progress-value\">{progress.vocabularyMastered}</span>\r\n          <span className=\"progress-label\">Words Learned</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderFeedbackModal = () => {\r\n    if (!showFeedback || !currentFeedback) return null;\r\n    \r\n    return (\r\n      <div className=\"feedback-modal\">\r\n        <div className=\"feedback-content\">\r\n          <h3>Detailed Feedback</h3>\r\n          \r\n          <div className=\"feedback-score\">\r\n            <strong>Performance:</strong> \r\n            <span className={`score-${Math.floor(currentFeedback.score/20)}`}>\r\n              {currentFeedback.score}/100\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"feedback-section\">\r\n            <h4>Your Input:</h4>\r\n            <p className=\"user-input\">{currentFeedback.userInput}</p>\r\n          </div>\r\n          \r\n          {currentFeedback.corrected && (\r\n            <div className=\"feedback-section\">\r\n              <h4>Corrected Version:</h4>\r\n              <p className=\"corrected-text\">{currentFeedback.corrected}</p>\r\n            </div>\r\n          )}\r\n          \r\n          {currentFeedback.errors?.length > 0 && (\r\n            <div className=\"feedback-section\">\r\n              <h4>Errors Found:</h4>\r\n              <ul className=\"error-list\">\r\n                {currentFeedback.errors.map((error, index) => (\r\n                  <li key={index}>{error}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n          \r\n          {currentFeedback.explanation && (\r\n            <div className=\"feedback-section\">\r\n              <h4>Explanation:</h4>\r\n              <p className=\"explanation-text\">{currentFeedback.explanation}</p>\r\n            </div>\r\n          )}\r\n          \r\n          {currentFeedback.suggestions?.length > 0 && (\r\n            <div className=\"feedback-section\">\r\n              <h4>Suggestions for Improvement:</h4>\r\n              <ul className=\"suggestions-list\">\r\n                {currentFeedback.suggestions.map((suggestion, index) => (\r\n                  <li key={index}>{suggestion}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n          \r\n          <button \r\n            onClick={() => setShowFeedback(false)}\r\n            className=\"close-feedback\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"settings-bar\">\r\n        <label className=\"toggle-feedback\">\r\n          <input \r\n            type=\"checkbox\" \r\n            checked={enableFeedback}\r\n            onChange={() => setEnableFeedback(!enableFeedback)}\r\n          />\r\n          <span>Enable Feedback & Grading</span>\r\n        </label>\r\n      </div>\r\n\r\n      <ProgressDisplay />\r\n      {renderFeedbackModal()}\r\n      \r\n      <div className=\"controls\">\r\n        <select \r\n          value={language} \r\n          onChange={(e) => setLanguage(e.target.value)}\r\n          disabled={isLoading}\r\n        >\r\n          <option value=\"spanish\">Spanish</option>\r\n          <option value=\"urdu\">Urdu</option>\r\n        </select>\r\n        \r\n        <select \r\n          value={level} \r\n          onChange={(e) => setLevel(e.target.value)}\r\n          disabled={isLoading}\r\n        >\r\n          <option value=\"novice\">Novice</option>\r\n          <option value=\"beginner\">Beginner</option>\r\n          <option value=\"intermediate\">Intermediate</option>\r\n          <option value=\"advanced\">Advanced</option>\r\n        </select>\r\n        \r\n        <button \r\n          onClick={handleGetExercise} \r\n          disabled={isLoading || activeExercise}\r\n          className=\"exercise-btn\"\r\n        >\r\n          Get Exercise\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"messages\">\r\n        {messages.map((msg, i) => (\r\n          <div key={i} className={`message ${msg.sender}`}>\r\n            {msg.sender === 'exercise' && (\r\n              <div className=\"exercise-header\">\r\n                <span className=\"exercise-badge\">{msg.exerciseType.toLowerCase()}</span>\r\n                <span className=\"exercise-difficulty\">{level}</span>\r\n              </div>\r\n            )}\r\n            {msg.instructions && (\r\n              <div className=\"exercise-instructions\">\r\n                <strong>Instructions:</strong> {msg.instructions}\r\n              </div>\r\n            )}\r\n            <div className=\"message-content\">\r\n              {renderLanguageText(msg.text)}\r\n            </div>\r\n            {msg.feedback && (\r\n              <button \r\n                onClick={() => {\r\n                  setCurrentFeedback({\r\n                    ...msg.feedback,\r\n                    userInput: messages.find(m => m.sender === 'user' && m.isExercise === !!msg.feedback)?.text || ''\r\n                  });\r\n                  setShowFeedback(true);\r\n                }}\r\n                className=\"view-feedback-btn\"\r\n              >\r\n                View Detailed Feedback\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n        \r\n        {isLoading && (\r\n          <div className=\"message tutor\">\r\n            <div className=\"typing-indicator\">\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"input-area\">\r\n        <input\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder={\r\n            activeExercise \r\n              ? \"Type your answer here...\" \r\n              : \"Type your message or ask for 'vocab exercise'...\"\r\n          }\r\n          disabled={isLoading}\r\n        />\r\n        <button \r\n          onClick={handleSend} \r\n          disabled={isLoading || !inputText.trim()}\r\n        >\r\n          {activeExercise ? \"Submit Answer\" : \"Send\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}